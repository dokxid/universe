services:
  app:
    container_name: universe-app
    restart: always
    environment:
      - DATABASE_URL=mongodb://mongo:27017/universe-staging
      - MONGODB_URI=mongodb://mongo:27017
      - MONGODB_DBNAME=universe-production
      - DOCKER=true
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:3000"
    networks:
      - app-network
    depends_on:
      - mongo
      - garage

  db:
    image: postgres
    container_name: postgres
    restart: always
    env_file: .env.docker
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql
    networks:
      - app-network

  mongo:
    container_name: mongo
    build:
      context: ./mongodb
      args:
        MONGO_VERSION: 8
    environment:
      MONGO_REPLICA_HOST: 127.0.0.1
      MONGO_REPLICA_PORT: 27017
      MONGO_COMMAND: "mongosh"
    volumes:
      - ./mongodb/data:/data/db
    command: [ "mongod", "--replSet", "rs0", "--bind_ip_all" ]
    networks:
      - app-network
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "mongosh --eval 'try { rs.status() } catch (err) { rs.initiate() }' || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  garage:
    container_name: garage
    image: dxflrs/garage:v2.1.0
    ports:
      - "3900:3900"
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./garage/garage.toml:/etc/garage.toml
      - ./garage/meta:/var/lib/garage/meta
      - ./garage/data:/var/lib/garage/data

volumes:
  mongo-data:
  pgdata:


networks:
  app-network:
    driver: bridge
