
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Story` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Story
 * 
 */
export type StoryModel = runtime.Types.Result.DefaultSelection<Prisma.$StoryPayload>

export type AggregateStory = {
  _count: StoryCountAggregateOutputType | null
  _avg: StoryAvgAggregateOutputType | null
  _sum: StorySumAggregateOutputType | null
  _min: StoryMinAggregateOutputType | null
  _max: StoryMaxAggregateOutputType | null
}

export type StoryAvgAggregateOutputType = {
  longitude: number | null
  latitude: number | null
  year: number | null
}

export type StorySumAggregateOutputType = {
  longitude: number | null
  latitude: number | null
  year: number | null
}

export type StoryMinAggregateOutputType = {
  id: string | null
  userId: string | null
  draft: boolean | null
  title: string | null
  content: string | null
  longitude: number | null
  latitude: number | null
  year: number | null
  visibleUniverse: boolean | null
  featuredImageUrl: string | null
  license: $Enums.License | null
  createdAt: Date | null
  updatedAt: Date | null
  labId: string | null
}

export type StoryMaxAggregateOutputType = {
  id: string | null
  userId: string | null
  draft: boolean | null
  title: string | null
  content: string | null
  longitude: number | null
  latitude: number | null
  year: number | null
  visibleUniverse: boolean | null
  featuredImageUrl: string | null
  license: $Enums.License | null
  createdAt: Date | null
  updatedAt: Date | null
  labId: string | null
}

export type StoryCountAggregateOutputType = {
  id: number
  userId: number
  draft: number
  title: number
  content: number
  longitude: number
  latitude: number
  year: number
  visibleUniverse: number
  featuredImageUrl: number
  license: number
  createdAt: number
  updatedAt: number
  labId: number
  _all: number
}


export type StoryAvgAggregateInputType = {
  longitude?: true
  latitude?: true
  year?: true
}

export type StorySumAggregateInputType = {
  longitude?: true
  latitude?: true
  year?: true
}

export type StoryMinAggregateInputType = {
  id?: true
  userId?: true
  draft?: true
  title?: true
  content?: true
  longitude?: true
  latitude?: true
  year?: true
  visibleUniverse?: true
  featuredImageUrl?: true
  license?: true
  createdAt?: true
  updatedAt?: true
  labId?: true
}

export type StoryMaxAggregateInputType = {
  id?: true
  userId?: true
  draft?: true
  title?: true
  content?: true
  longitude?: true
  latitude?: true
  year?: true
  visibleUniverse?: true
  featuredImageUrl?: true
  license?: true
  createdAt?: true
  updatedAt?: true
  labId?: true
}

export type StoryCountAggregateInputType = {
  id?: true
  userId?: true
  draft?: true
  title?: true
  content?: true
  longitude?: true
  latitude?: true
  year?: true
  visibleUniverse?: true
  featuredImageUrl?: true
  license?: true
  createdAt?: true
  updatedAt?: true
  labId?: true
  _all?: true
}

export type StoryAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Story to aggregate.
   */
  where?: Prisma.StoryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Stories to fetch.
   */
  orderBy?: Prisma.StoryOrderByWithRelationInput | Prisma.StoryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.StoryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Stories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Stories.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Stories
  **/
  _count?: true | StoryCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: StoryAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: StorySumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: StoryMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: StoryMaxAggregateInputType
}

export type GetStoryAggregateType<T extends StoryAggregateArgs> = {
      [P in keyof T & keyof AggregateStory]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStory[P]>
    : Prisma.GetScalarType<T[P], AggregateStory[P]>
}




export type StoryGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StoryWhereInput
  orderBy?: Prisma.StoryOrderByWithAggregationInput | Prisma.StoryOrderByWithAggregationInput[]
  by: Prisma.StoryScalarFieldEnum[] | Prisma.StoryScalarFieldEnum
  having?: Prisma.StoryScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: StoryCountAggregateInputType | true
  _avg?: StoryAvgAggregateInputType
  _sum?: StorySumAggregateInputType
  _min?: StoryMinAggregateInputType
  _max?: StoryMaxAggregateInputType
}

export type StoryGroupByOutputType = {
  id: string
  userId: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt: Date
  updatedAt: Date
  labId: string
  _count: StoryCountAggregateOutputType | null
  _avg: StoryAvgAggregateOutputType | null
  _sum: StorySumAggregateOutputType | null
  _min: StoryMinAggregateOutputType | null
  _max: StoryMaxAggregateOutputType | null
}

type GetStoryGroupByPayload<T extends StoryGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<StoryGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof StoryGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], StoryGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], StoryGroupByOutputType[P]>
      }
    >
  >



export type StoryWhereInput = {
  AND?: Prisma.StoryWhereInput | Prisma.StoryWhereInput[]
  OR?: Prisma.StoryWhereInput[]
  NOT?: Prisma.StoryWhereInput | Prisma.StoryWhereInput[]
  id?: Prisma.StringFilter<"Story"> | string
  userId?: Prisma.StringFilter<"Story"> | string
  draft?: Prisma.BoolFilter<"Story"> | boolean
  title?: Prisma.StringFilter<"Story"> | string
  content?: Prisma.StringFilter<"Story"> | string
  longitude?: Prisma.FloatFilter<"Story"> | number
  latitude?: Prisma.FloatFilter<"Story"> | number
  year?: Prisma.IntFilter<"Story"> | number
  visibleUniverse?: Prisma.BoolFilter<"Story"> | boolean
  featuredImageUrl?: Prisma.StringFilter<"Story"> | string
  license?: Prisma.EnumLicenseFilter<"Story"> | $Enums.License
  createdAt?: Prisma.DateTimeFilter<"Story"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Story"> | Date | string
  labId?: Prisma.StringFilter<"Story"> | string
  author?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  tags?: Prisma.TagsOnStoriesListRelationFilter
  elevationRequests?: Prisma.ElevationRequestListRelationFilter
  lab?: Prisma.XOR<Prisma.LabScalarRelationFilter, Prisma.LabWhereInput>
}

export type StoryOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  draft?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  year?: Prisma.SortOrder
  visibleUniverse?: Prisma.SortOrder
  featuredImageUrl?: Prisma.SortOrder
  license?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  labId?: Prisma.SortOrder
  author?: Prisma.UserOrderByWithRelationInput
  tags?: Prisma.TagsOnStoriesOrderByRelationAggregateInput
  elevationRequests?: Prisma.ElevationRequestOrderByRelationAggregateInput
  lab?: Prisma.LabOrderByWithRelationInput
}

export type StoryWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.StoryWhereInput | Prisma.StoryWhereInput[]
  OR?: Prisma.StoryWhereInput[]
  NOT?: Prisma.StoryWhereInput | Prisma.StoryWhereInput[]
  userId?: Prisma.StringFilter<"Story"> | string
  draft?: Prisma.BoolFilter<"Story"> | boolean
  title?: Prisma.StringFilter<"Story"> | string
  content?: Prisma.StringFilter<"Story"> | string
  longitude?: Prisma.FloatFilter<"Story"> | number
  latitude?: Prisma.FloatFilter<"Story"> | number
  year?: Prisma.IntFilter<"Story"> | number
  visibleUniverse?: Prisma.BoolFilter<"Story"> | boolean
  featuredImageUrl?: Prisma.StringFilter<"Story"> | string
  license?: Prisma.EnumLicenseFilter<"Story"> | $Enums.License
  createdAt?: Prisma.DateTimeFilter<"Story"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Story"> | Date | string
  labId?: Prisma.StringFilter<"Story"> | string
  author?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  tags?: Prisma.TagsOnStoriesListRelationFilter
  elevationRequests?: Prisma.ElevationRequestListRelationFilter
  lab?: Prisma.XOR<Prisma.LabScalarRelationFilter, Prisma.LabWhereInput>
}, "id">

export type StoryOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  draft?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  year?: Prisma.SortOrder
  visibleUniverse?: Prisma.SortOrder
  featuredImageUrl?: Prisma.SortOrder
  license?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  labId?: Prisma.SortOrder
  _count?: Prisma.StoryCountOrderByAggregateInput
  _avg?: Prisma.StoryAvgOrderByAggregateInput
  _max?: Prisma.StoryMaxOrderByAggregateInput
  _min?: Prisma.StoryMinOrderByAggregateInput
  _sum?: Prisma.StorySumOrderByAggregateInput
}

export type StoryScalarWhereWithAggregatesInput = {
  AND?: Prisma.StoryScalarWhereWithAggregatesInput | Prisma.StoryScalarWhereWithAggregatesInput[]
  OR?: Prisma.StoryScalarWhereWithAggregatesInput[]
  NOT?: Prisma.StoryScalarWhereWithAggregatesInput | Prisma.StoryScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Story"> | string
  userId?: Prisma.StringWithAggregatesFilter<"Story"> | string
  draft?: Prisma.BoolWithAggregatesFilter<"Story"> | boolean
  title?: Prisma.StringWithAggregatesFilter<"Story"> | string
  content?: Prisma.StringWithAggregatesFilter<"Story"> | string
  longitude?: Prisma.FloatWithAggregatesFilter<"Story"> | number
  latitude?: Prisma.FloatWithAggregatesFilter<"Story"> | number
  year?: Prisma.IntWithAggregatesFilter<"Story"> | number
  visibleUniverse?: Prisma.BoolWithAggregatesFilter<"Story"> | boolean
  featuredImageUrl?: Prisma.StringWithAggregatesFilter<"Story"> | string
  license?: Prisma.EnumLicenseWithAggregatesFilter<"Story"> | $Enums.License
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Story"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Story"> | Date | string
  labId?: Prisma.StringWithAggregatesFilter<"Story"> | string
}

export type StoryCreateInput = {
  id?: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  author: Prisma.UserCreateNestedOneWithoutStoriesInput
  tags?: Prisma.TagsOnStoriesCreateNestedManyWithoutStoryInput
  elevationRequests?: Prisma.ElevationRequestCreateNestedManyWithoutStoryInput
  lab: Prisma.LabCreateNestedOneWithoutStoriesInput
}

export type StoryUncheckedCreateInput = {
  id?: string
  userId: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  labId: string
  tags?: Prisma.TagsOnStoriesUncheckedCreateNestedManyWithoutStoryInput
  elevationRequests?: Prisma.ElevationRequestUncheckedCreateNestedManyWithoutStoryInput
}

export type StoryUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  author?: Prisma.UserUpdateOneRequiredWithoutStoriesNestedInput
  tags?: Prisma.TagsOnStoriesUpdateManyWithoutStoryNestedInput
  elevationRequests?: Prisma.ElevationRequestUpdateManyWithoutStoryNestedInput
  lab?: Prisma.LabUpdateOneRequiredWithoutStoriesNestedInput
}

export type StoryUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  labId?: Prisma.StringFieldUpdateOperationsInput | string
  tags?: Prisma.TagsOnStoriesUncheckedUpdateManyWithoutStoryNestedInput
  elevationRequests?: Prisma.ElevationRequestUncheckedUpdateManyWithoutStoryNestedInput
}

export type StoryCreateManyInput = {
  id?: string
  userId: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  labId: string
}

export type StoryUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StoryUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  labId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type StoryNullableScalarRelationFilter = {
  is?: Prisma.StoryWhereInput | null
  isNot?: Prisma.StoryWhereInput | null
}

export type StoryScalarRelationFilter = {
  is?: Prisma.StoryWhereInput
  isNot?: Prisma.StoryWhereInput
}

export type StoryCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  draft?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  year?: Prisma.SortOrder
  visibleUniverse?: Prisma.SortOrder
  featuredImageUrl?: Prisma.SortOrder
  license?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  labId?: Prisma.SortOrder
}

export type StoryAvgOrderByAggregateInput = {
  longitude?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  year?: Prisma.SortOrder
}

export type StoryMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  draft?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  year?: Prisma.SortOrder
  visibleUniverse?: Prisma.SortOrder
  featuredImageUrl?: Prisma.SortOrder
  license?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  labId?: Prisma.SortOrder
}

export type StoryMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  draft?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  year?: Prisma.SortOrder
  visibleUniverse?: Prisma.SortOrder
  featuredImageUrl?: Prisma.SortOrder
  license?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  labId?: Prisma.SortOrder
}

export type StorySumOrderByAggregateInput = {
  longitude?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  year?: Prisma.SortOrder
}

export type StoryListRelationFilter = {
  every?: Prisma.StoryWhereInput
  some?: Prisma.StoryWhereInput
  none?: Prisma.StoryWhereInput
}

export type StoryOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StoryCreateNestedOneWithoutElevationRequestsInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutElevationRequestsInput, Prisma.StoryUncheckedCreateWithoutElevationRequestsInput>
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutElevationRequestsInput
  connect?: Prisma.StoryWhereUniqueInput
}

export type StoryUpdateOneWithoutElevationRequestsNestedInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutElevationRequestsInput, Prisma.StoryUncheckedCreateWithoutElevationRequestsInput>
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutElevationRequestsInput
  upsert?: Prisma.StoryUpsertWithoutElevationRequestsInput
  disconnect?: Prisma.StoryWhereInput | boolean
  delete?: Prisma.StoryWhereInput | boolean
  connect?: Prisma.StoryWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StoryUpdateToOneWithWhereWithoutElevationRequestsInput, Prisma.StoryUpdateWithoutElevationRequestsInput>, Prisma.StoryUncheckedUpdateWithoutElevationRequestsInput>
}

export type StoryCreateNestedOneWithoutTagsInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutTagsInput, Prisma.StoryUncheckedCreateWithoutTagsInput>
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutTagsInput
  connect?: Prisma.StoryWhereUniqueInput
}

export type StoryUpdateOneRequiredWithoutTagsNestedInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutTagsInput, Prisma.StoryUncheckedCreateWithoutTagsInput>
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutTagsInput
  upsert?: Prisma.StoryUpsertWithoutTagsInput
  connect?: Prisma.StoryWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StoryUpdateToOneWithWhereWithoutTagsInput, Prisma.StoryUpdateWithoutTagsInput>, Prisma.StoryUncheckedUpdateWithoutTagsInput>
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type FloatFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type EnumLicenseFieldUpdateOperationsInput = {
  set?: $Enums.License
}

export type StoryCreateNestedManyWithoutAuthorInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutAuthorInput, Prisma.StoryUncheckedCreateWithoutAuthorInput> | Prisma.StoryCreateWithoutAuthorInput[] | Prisma.StoryUncheckedCreateWithoutAuthorInput[]
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutAuthorInput | Prisma.StoryCreateOrConnectWithoutAuthorInput[]
  createMany?: Prisma.StoryCreateManyAuthorInputEnvelope
  connect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
}

export type StoryUncheckedCreateNestedManyWithoutAuthorInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutAuthorInput, Prisma.StoryUncheckedCreateWithoutAuthorInput> | Prisma.StoryCreateWithoutAuthorInput[] | Prisma.StoryUncheckedCreateWithoutAuthorInput[]
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutAuthorInput | Prisma.StoryCreateOrConnectWithoutAuthorInput[]
  createMany?: Prisma.StoryCreateManyAuthorInputEnvelope
  connect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
}

export type StoryUpdateManyWithoutAuthorNestedInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutAuthorInput, Prisma.StoryUncheckedCreateWithoutAuthorInput> | Prisma.StoryCreateWithoutAuthorInput[] | Prisma.StoryUncheckedCreateWithoutAuthorInput[]
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutAuthorInput | Prisma.StoryCreateOrConnectWithoutAuthorInput[]
  upsert?: Prisma.StoryUpsertWithWhereUniqueWithoutAuthorInput | Prisma.StoryUpsertWithWhereUniqueWithoutAuthorInput[]
  createMany?: Prisma.StoryCreateManyAuthorInputEnvelope
  set?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  disconnect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  delete?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  connect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  update?: Prisma.StoryUpdateWithWhereUniqueWithoutAuthorInput | Prisma.StoryUpdateWithWhereUniqueWithoutAuthorInput[]
  updateMany?: Prisma.StoryUpdateManyWithWhereWithoutAuthorInput | Prisma.StoryUpdateManyWithWhereWithoutAuthorInput[]
  deleteMany?: Prisma.StoryScalarWhereInput | Prisma.StoryScalarWhereInput[]
}

export type StoryUncheckedUpdateManyWithoutAuthorNestedInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutAuthorInput, Prisma.StoryUncheckedCreateWithoutAuthorInput> | Prisma.StoryCreateWithoutAuthorInput[] | Prisma.StoryUncheckedCreateWithoutAuthorInput[]
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutAuthorInput | Prisma.StoryCreateOrConnectWithoutAuthorInput[]
  upsert?: Prisma.StoryUpsertWithWhereUniqueWithoutAuthorInput | Prisma.StoryUpsertWithWhereUniqueWithoutAuthorInput[]
  createMany?: Prisma.StoryCreateManyAuthorInputEnvelope
  set?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  disconnect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  delete?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  connect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  update?: Prisma.StoryUpdateWithWhereUniqueWithoutAuthorInput | Prisma.StoryUpdateWithWhereUniqueWithoutAuthorInput[]
  updateMany?: Prisma.StoryUpdateManyWithWhereWithoutAuthorInput | Prisma.StoryUpdateManyWithWhereWithoutAuthorInput[]
  deleteMany?: Prisma.StoryScalarWhereInput | Prisma.StoryScalarWhereInput[]
}

export type StoryCreateNestedManyWithoutLabInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutLabInput, Prisma.StoryUncheckedCreateWithoutLabInput> | Prisma.StoryCreateWithoutLabInput[] | Prisma.StoryUncheckedCreateWithoutLabInput[]
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutLabInput | Prisma.StoryCreateOrConnectWithoutLabInput[]
  createMany?: Prisma.StoryCreateManyLabInputEnvelope
  connect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
}

export type StoryUncheckedCreateNestedManyWithoutLabInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutLabInput, Prisma.StoryUncheckedCreateWithoutLabInput> | Prisma.StoryCreateWithoutLabInput[] | Prisma.StoryUncheckedCreateWithoutLabInput[]
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutLabInput | Prisma.StoryCreateOrConnectWithoutLabInput[]
  createMany?: Prisma.StoryCreateManyLabInputEnvelope
  connect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
}

export type StoryUpdateManyWithoutLabNestedInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutLabInput, Prisma.StoryUncheckedCreateWithoutLabInput> | Prisma.StoryCreateWithoutLabInput[] | Prisma.StoryUncheckedCreateWithoutLabInput[]
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutLabInput | Prisma.StoryCreateOrConnectWithoutLabInput[]
  upsert?: Prisma.StoryUpsertWithWhereUniqueWithoutLabInput | Prisma.StoryUpsertWithWhereUniqueWithoutLabInput[]
  createMany?: Prisma.StoryCreateManyLabInputEnvelope
  set?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  disconnect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  delete?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  connect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  update?: Prisma.StoryUpdateWithWhereUniqueWithoutLabInput | Prisma.StoryUpdateWithWhereUniqueWithoutLabInput[]
  updateMany?: Prisma.StoryUpdateManyWithWhereWithoutLabInput | Prisma.StoryUpdateManyWithWhereWithoutLabInput[]
  deleteMany?: Prisma.StoryScalarWhereInput | Prisma.StoryScalarWhereInput[]
}

export type StoryUncheckedUpdateManyWithoutLabNestedInput = {
  create?: Prisma.XOR<Prisma.StoryCreateWithoutLabInput, Prisma.StoryUncheckedCreateWithoutLabInput> | Prisma.StoryCreateWithoutLabInput[] | Prisma.StoryUncheckedCreateWithoutLabInput[]
  connectOrCreate?: Prisma.StoryCreateOrConnectWithoutLabInput | Prisma.StoryCreateOrConnectWithoutLabInput[]
  upsert?: Prisma.StoryUpsertWithWhereUniqueWithoutLabInput | Prisma.StoryUpsertWithWhereUniqueWithoutLabInput[]
  createMany?: Prisma.StoryCreateManyLabInputEnvelope
  set?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  disconnect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  delete?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  connect?: Prisma.StoryWhereUniqueInput | Prisma.StoryWhereUniqueInput[]
  update?: Prisma.StoryUpdateWithWhereUniqueWithoutLabInput | Prisma.StoryUpdateWithWhereUniqueWithoutLabInput[]
  updateMany?: Prisma.StoryUpdateManyWithWhereWithoutLabInput | Prisma.StoryUpdateManyWithWhereWithoutLabInput[]
  deleteMany?: Prisma.StoryScalarWhereInput | Prisma.StoryScalarWhereInput[]
}

export type StoryCreateWithoutElevationRequestsInput = {
  id?: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  author: Prisma.UserCreateNestedOneWithoutStoriesInput
  tags?: Prisma.TagsOnStoriesCreateNestedManyWithoutStoryInput
  lab: Prisma.LabCreateNestedOneWithoutStoriesInput
}

export type StoryUncheckedCreateWithoutElevationRequestsInput = {
  id?: string
  userId: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  labId: string
  tags?: Prisma.TagsOnStoriesUncheckedCreateNestedManyWithoutStoryInput
}

export type StoryCreateOrConnectWithoutElevationRequestsInput = {
  where: Prisma.StoryWhereUniqueInput
  create: Prisma.XOR<Prisma.StoryCreateWithoutElevationRequestsInput, Prisma.StoryUncheckedCreateWithoutElevationRequestsInput>
}

export type StoryUpsertWithoutElevationRequestsInput = {
  update: Prisma.XOR<Prisma.StoryUpdateWithoutElevationRequestsInput, Prisma.StoryUncheckedUpdateWithoutElevationRequestsInput>
  create: Prisma.XOR<Prisma.StoryCreateWithoutElevationRequestsInput, Prisma.StoryUncheckedCreateWithoutElevationRequestsInput>
  where?: Prisma.StoryWhereInput
}

export type StoryUpdateToOneWithWhereWithoutElevationRequestsInput = {
  where?: Prisma.StoryWhereInput
  data: Prisma.XOR<Prisma.StoryUpdateWithoutElevationRequestsInput, Prisma.StoryUncheckedUpdateWithoutElevationRequestsInput>
}

export type StoryUpdateWithoutElevationRequestsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  author?: Prisma.UserUpdateOneRequiredWithoutStoriesNestedInput
  tags?: Prisma.TagsOnStoriesUpdateManyWithoutStoryNestedInput
  lab?: Prisma.LabUpdateOneRequiredWithoutStoriesNestedInput
}

export type StoryUncheckedUpdateWithoutElevationRequestsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  labId?: Prisma.StringFieldUpdateOperationsInput | string
  tags?: Prisma.TagsOnStoriesUncheckedUpdateManyWithoutStoryNestedInput
}

export type StoryCreateWithoutTagsInput = {
  id?: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  author: Prisma.UserCreateNestedOneWithoutStoriesInput
  elevationRequests?: Prisma.ElevationRequestCreateNestedManyWithoutStoryInput
  lab: Prisma.LabCreateNestedOneWithoutStoriesInput
}

export type StoryUncheckedCreateWithoutTagsInput = {
  id?: string
  userId: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  labId: string
  elevationRequests?: Prisma.ElevationRequestUncheckedCreateNestedManyWithoutStoryInput
}

export type StoryCreateOrConnectWithoutTagsInput = {
  where: Prisma.StoryWhereUniqueInput
  create: Prisma.XOR<Prisma.StoryCreateWithoutTagsInput, Prisma.StoryUncheckedCreateWithoutTagsInput>
}

export type StoryUpsertWithoutTagsInput = {
  update: Prisma.XOR<Prisma.StoryUpdateWithoutTagsInput, Prisma.StoryUncheckedUpdateWithoutTagsInput>
  create: Prisma.XOR<Prisma.StoryCreateWithoutTagsInput, Prisma.StoryUncheckedCreateWithoutTagsInput>
  where?: Prisma.StoryWhereInput
}

export type StoryUpdateToOneWithWhereWithoutTagsInput = {
  where?: Prisma.StoryWhereInput
  data: Prisma.XOR<Prisma.StoryUpdateWithoutTagsInput, Prisma.StoryUncheckedUpdateWithoutTagsInput>
}

export type StoryUpdateWithoutTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  author?: Prisma.UserUpdateOneRequiredWithoutStoriesNestedInput
  elevationRequests?: Prisma.ElevationRequestUpdateManyWithoutStoryNestedInput
  lab?: Prisma.LabUpdateOneRequiredWithoutStoriesNestedInput
}

export type StoryUncheckedUpdateWithoutTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  labId?: Prisma.StringFieldUpdateOperationsInput | string
  elevationRequests?: Prisma.ElevationRequestUncheckedUpdateManyWithoutStoryNestedInput
}

export type StoryCreateWithoutAuthorInput = {
  id?: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  tags?: Prisma.TagsOnStoriesCreateNestedManyWithoutStoryInput
  elevationRequests?: Prisma.ElevationRequestCreateNestedManyWithoutStoryInput
  lab: Prisma.LabCreateNestedOneWithoutStoriesInput
}

export type StoryUncheckedCreateWithoutAuthorInput = {
  id?: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  labId: string
  tags?: Prisma.TagsOnStoriesUncheckedCreateNestedManyWithoutStoryInput
  elevationRequests?: Prisma.ElevationRequestUncheckedCreateNestedManyWithoutStoryInput
}

export type StoryCreateOrConnectWithoutAuthorInput = {
  where: Prisma.StoryWhereUniqueInput
  create: Prisma.XOR<Prisma.StoryCreateWithoutAuthorInput, Prisma.StoryUncheckedCreateWithoutAuthorInput>
}

export type StoryCreateManyAuthorInputEnvelope = {
  data: Prisma.StoryCreateManyAuthorInput | Prisma.StoryCreateManyAuthorInput[]
  skipDuplicates?: boolean
}

export type StoryUpsertWithWhereUniqueWithoutAuthorInput = {
  where: Prisma.StoryWhereUniqueInput
  update: Prisma.XOR<Prisma.StoryUpdateWithoutAuthorInput, Prisma.StoryUncheckedUpdateWithoutAuthorInput>
  create: Prisma.XOR<Prisma.StoryCreateWithoutAuthorInput, Prisma.StoryUncheckedCreateWithoutAuthorInput>
}

export type StoryUpdateWithWhereUniqueWithoutAuthorInput = {
  where: Prisma.StoryWhereUniqueInput
  data: Prisma.XOR<Prisma.StoryUpdateWithoutAuthorInput, Prisma.StoryUncheckedUpdateWithoutAuthorInput>
}

export type StoryUpdateManyWithWhereWithoutAuthorInput = {
  where: Prisma.StoryScalarWhereInput
  data: Prisma.XOR<Prisma.StoryUpdateManyMutationInput, Prisma.StoryUncheckedUpdateManyWithoutAuthorInput>
}

export type StoryScalarWhereInput = {
  AND?: Prisma.StoryScalarWhereInput | Prisma.StoryScalarWhereInput[]
  OR?: Prisma.StoryScalarWhereInput[]
  NOT?: Prisma.StoryScalarWhereInput | Prisma.StoryScalarWhereInput[]
  id?: Prisma.StringFilter<"Story"> | string
  userId?: Prisma.StringFilter<"Story"> | string
  draft?: Prisma.BoolFilter<"Story"> | boolean
  title?: Prisma.StringFilter<"Story"> | string
  content?: Prisma.StringFilter<"Story"> | string
  longitude?: Prisma.FloatFilter<"Story"> | number
  latitude?: Prisma.FloatFilter<"Story"> | number
  year?: Prisma.IntFilter<"Story"> | number
  visibleUniverse?: Prisma.BoolFilter<"Story"> | boolean
  featuredImageUrl?: Prisma.StringFilter<"Story"> | string
  license?: Prisma.EnumLicenseFilter<"Story"> | $Enums.License
  createdAt?: Prisma.DateTimeFilter<"Story"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Story"> | Date | string
  labId?: Prisma.StringFilter<"Story"> | string
}

export type StoryCreateWithoutLabInput = {
  id?: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  author: Prisma.UserCreateNestedOneWithoutStoriesInput
  tags?: Prisma.TagsOnStoriesCreateNestedManyWithoutStoryInput
  elevationRequests?: Prisma.ElevationRequestCreateNestedManyWithoutStoryInput
}

export type StoryUncheckedCreateWithoutLabInput = {
  id?: string
  userId: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  tags?: Prisma.TagsOnStoriesUncheckedCreateNestedManyWithoutStoryInput
  elevationRequests?: Prisma.ElevationRequestUncheckedCreateNestedManyWithoutStoryInput
}

export type StoryCreateOrConnectWithoutLabInput = {
  where: Prisma.StoryWhereUniqueInput
  create: Prisma.XOR<Prisma.StoryCreateWithoutLabInput, Prisma.StoryUncheckedCreateWithoutLabInput>
}

export type StoryCreateManyLabInputEnvelope = {
  data: Prisma.StoryCreateManyLabInput | Prisma.StoryCreateManyLabInput[]
  skipDuplicates?: boolean
}

export type StoryUpsertWithWhereUniqueWithoutLabInput = {
  where: Prisma.StoryWhereUniqueInput
  update: Prisma.XOR<Prisma.StoryUpdateWithoutLabInput, Prisma.StoryUncheckedUpdateWithoutLabInput>
  create: Prisma.XOR<Prisma.StoryCreateWithoutLabInput, Prisma.StoryUncheckedCreateWithoutLabInput>
}

export type StoryUpdateWithWhereUniqueWithoutLabInput = {
  where: Prisma.StoryWhereUniqueInput
  data: Prisma.XOR<Prisma.StoryUpdateWithoutLabInput, Prisma.StoryUncheckedUpdateWithoutLabInput>
}

export type StoryUpdateManyWithWhereWithoutLabInput = {
  where: Prisma.StoryScalarWhereInput
  data: Prisma.XOR<Prisma.StoryUpdateManyMutationInput, Prisma.StoryUncheckedUpdateManyWithoutLabInput>
}

export type StoryCreateManyAuthorInput = {
  id?: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
  labId: string
}

export type StoryUpdateWithoutAuthorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  tags?: Prisma.TagsOnStoriesUpdateManyWithoutStoryNestedInput
  elevationRequests?: Prisma.ElevationRequestUpdateManyWithoutStoryNestedInput
  lab?: Prisma.LabUpdateOneRequiredWithoutStoriesNestedInput
}

export type StoryUncheckedUpdateWithoutAuthorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  labId?: Prisma.StringFieldUpdateOperationsInput | string
  tags?: Prisma.TagsOnStoriesUncheckedUpdateManyWithoutStoryNestedInput
  elevationRequests?: Prisma.ElevationRequestUncheckedUpdateManyWithoutStoryNestedInput
}

export type StoryUncheckedUpdateManyWithoutAuthorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  labId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type StoryCreateManyLabInput = {
  id?: string
  userId: string
  draft: boolean
  title: string
  content: string
  longitude: number
  latitude: number
  year: number
  visibleUniverse: boolean
  featuredImageUrl: string
  license: $Enums.License
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StoryUpdateWithoutLabInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  author?: Prisma.UserUpdateOneRequiredWithoutStoriesNestedInput
  tags?: Prisma.TagsOnStoriesUpdateManyWithoutStoryNestedInput
  elevationRequests?: Prisma.ElevationRequestUpdateManyWithoutStoryNestedInput
}

export type StoryUncheckedUpdateWithoutLabInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  tags?: Prisma.TagsOnStoriesUncheckedUpdateManyWithoutStoryNestedInput
  elevationRequests?: Prisma.ElevationRequestUncheckedUpdateManyWithoutStoryNestedInput
}

export type StoryUncheckedUpdateManyWithoutLabInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  draft?: Prisma.BoolFieldUpdateOperationsInput | boolean
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  longitude?: Prisma.FloatFieldUpdateOperationsInput | number
  latitude?: Prisma.FloatFieldUpdateOperationsInput | number
  year?: Prisma.IntFieldUpdateOperationsInput | number
  visibleUniverse?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featuredImageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  license?: Prisma.EnumLicenseFieldUpdateOperationsInput | $Enums.License
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type StoryCountOutputType
 */

export type StoryCountOutputType = {
  tags: number
  elevationRequests: number
}

export type StoryCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  tags?: boolean | StoryCountOutputTypeCountTagsArgs
  elevationRequests?: boolean | StoryCountOutputTypeCountElevationRequestsArgs
}

/**
 * StoryCountOutputType without action
 */
export type StoryCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StoryCountOutputType
   */
  select?: Prisma.StoryCountOutputTypeSelect<ExtArgs> | null
}

/**
 * StoryCountOutputType without action
 */
export type StoryCountOutputTypeCountTagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TagsOnStoriesWhereInput
}

/**
 * StoryCountOutputType without action
 */
export type StoryCountOutputTypeCountElevationRequestsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ElevationRequestWhereInput
}


export type StorySelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  draft?: boolean
  title?: boolean
  content?: boolean
  longitude?: boolean
  latitude?: boolean
  year?: boolean
  visibleUniverse?: boolean
  featuredImageUrl?: boolean
  license?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  labId?: boolean
  author?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  tags?: boolean | Prisma.Story$tagsArgs<ExtArgs>
  elevationRequests?: boolean | Prisma.Story$elevationRequestsArgs<ExtArgs>
  lab?: boolean | Prisma.LabDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.StoryCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["story"]>

export type StorySelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  draft?: boolean
  title?: boolean
  content?: boolean
  longitude?: boolean
  latitude?: boolean
  year?: boolean
  visibleUniverse?: boolean
  featuredImageUrl?: boolean
  license?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  labId?: boolean
  author?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  lab?: boolean | Prisma.LabDefaultArgs<ExtArgs>
}, ExtArgs["result"]["story"]>

export type StorySelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  draft?: boolean
  title?: boolean
  content?: boolean
  longitude?: boolean
  latitude?: boolean
  year?: boolean
  visibleUniverse?: boolean
  featuredImageUrl?: boolean
  license?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  labId?: boolean
  author?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  lab?: boolean | Prisma.LabDefaultArgs<ExtArgs>
}, ExtArgs["result"]["story"]>

export type StorySelectScalar = {
  id?: boolean
  userId?: boolean
  draft?: boolean
  title?: boolean
  content?: boolean
  longitude?: boolean
  latitude?: boolean
  year?: boolean
  visibleUniverse?: boolean
  featuredImageUrl?: boolean
  license?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  labId?: boolean
}

export type StoryOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "userId" | "draft" | "title" | "content" | "longitude" | "latitude" | "year" | "visibleUniverse" | "featuredImageUrl" | "license" | "createdAt" | "updatedAt" | "labId", ExtArgs["result"]["story"]>
export type StoryInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  author?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  tags?: boolean | Prisma.Story$tagsArgs<ExtArgs>
  elevationRequests?: boolean | Prisma.Story$elevationRequestsArgs<ExtArgs>
  lab?: boolean | Prisma.LabDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.StoryCountOutputTypeDefaultArgs<ExtArgs>
}
export type StoryIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  author?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  lab?: boolean | Prisma.LabDefaultArgs<ExtArgs>
}
export type StoryIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  author?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  lab?: boolean | Prisma.LabDefaultArgs<ExtArgs>
}

export type $StoryPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Story"
  objects: {
    author: Prisma.$UserPayload<ExtArgs>
    tags: Prisma.$TagsOnStoriesPayload<ExtArgs>[]
    elevationRequests: Prisma.$ElevationRequestPayload<ExtArgs>[]
    lab: Prisma.$LabPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    userId: string
    draft: boolean
    title: string
    content: string
    longitude: number
    latitude: number
    year: number
    visibleUniverse: boolean
    featuredImageUrl: string
    license: $Enums.License
    createdAt: Date
    updatedAt: Date
    labId: string
  }, ExtArgs["result"]["story"]>
  composites: {}
}

export type StoryGetPayload<S extends boolean | null | undefined | StoryDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$StoryPayload, S>

export type StoryCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<StoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: StoryCountAggregateInputType | true
  }

export interface StoryDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Story'], meta: { name: 'Story' } }
  /**
   * Find zero or one Story that matches the filter.
   * @param {StoryFindUniqueArgs} args - Arguments to find a Story
   * @example
   * // Get one Story
   * const story = await prisma.story.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends StoryFindUniqueArgs>(args: Prisma.SelectSubset<T, StoryFindUniqueArgs<ExtArgs>>): Prisma.Prisma__StoryClient<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Story that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {StoryFindUniqueOrThrowArgs} args - Arguments to find a Story
   * @example
   * // Get one Story
   * const story = await prisma.story.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends StoryFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, StoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__StoryClient<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Story that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StoryFindFirstArgs} args - Arguments to find a Story
   * @example
   * // Get one Story
   * const story = await prisma.story.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends StoryFindFirstArgs>(args?: Prisma.SelectSubset<T, StoryFindFirstArgs<ExtArgs>>): Prisma.Prisma__StoryClient<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Story that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StoryFindFirstOrThrowArgs} args - Arguments to find a Story
   * @example
   * // Get one Story
   * const story = await prisma.story.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends StoryFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, StoryFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__StoryClient<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Stories that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StoryFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Stories
   * const stories = await prisma.story.findMany()
   * 
   * // Get first 10 Stories
   * const stories = await prisma.story.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const storyWithIdOnly = await prisma.story.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends StoryFindManyArgs>(args?: Prisma.SelectSubset<T, StoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Story.
   * @param {StoryCreateArgs} args - Arguments to create a Story.
   * @example
   * // Create one Story
   * const Story = await prisma.story.create({
   *   data: {
   *     // ... data to create a Story
   *   }
   * })
   * 
   */
  create<T extends StoryCreateArgs>(args: Prisma.SelectSubset<T, StoryCreateArgs<ExtArgs>>): Prisma.Prisma__StoryClient<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Stories.
   * @param {StoryCreateManyArgs} args - Arguments to create many Stories.
   * @example
   * // Create many Stories
   * const story = await prisma.story.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends StoryCreateManyArgs>(args?: Prisma.SelectSubset<T, StoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Stories and returns the data saved in the database.
   * @param {StoryCreateManyAndReturnArgs} args - Arguments to create many Stories.
   * @example
   * // Create many Stories
   * const story = await prisma.story.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Stories and only return the `id`
   * const storyWithIdOnly = await prisma.story.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends StoryCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, StoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Story.
   * @param {StoryDeleteArgs} args - Arguments to delete one Story.
   * @example
   * // Delete one Story
   * const Story = await prisma.story.delete({
   *   where: {
   *     // ... filter to delete one Story
   *   }
   * })
   * 
   */
  delete<T extends StoryDeleteArgs>(args: Prisma.SelectSubset<T, StoryDeleteArgs<ExtArgs>>): Prisma.Prisma__StoryClient<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Story.
   * @param {StoryUpdateArgs} args - Arguments to update one Story.
   * @example
   * // Update one Story
   * const story = await prisma.story.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends StoryUpdateArgs>(args: Prisma.SelectSubset<T, StoryUpdateArgs<ExtArgs>>): Prisma.Prisma__StoryClient<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Stories.
   * @param {StoryDeleteManyArgs} args - Arguments to filter Stories to delete.
   * @example
   * // Delete a few Stories
   * const { count } = await prisma.story.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends StoryDeleteManyArgs>(args?: Prisma.SelectSubset<T, StoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Stories.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StoryUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Stories
   * const story = await prisma.story.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends StoryUpdateManyArgs>(args: Prisma.SelectSubset<T, StoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Stories and returns the data updated in the database.
   * @param {StoryUpdateManyAndReturnArgs} args - Arguments to update many Stories.
   * @example
   * // Update many Stories
   * const story = await prisma.story.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Stories and only return the `id`
   * const storyWithIdOnly = await prisma.story.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends StoryUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, StoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Story.
   * @param {StoryUpsertArgs} args - Arguments to update or create a Story.
   * @example
   * // Update or create a Story
   * const story = await prisma.story.upsert({
   *   create: {
   *     // ... data to create a Story
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Story we want to update
   *   }
   * })
   */
  upsert<T extends StoryUpsertArgs>(args: Prisma.SelectSubset<T, StoryUpsertArgs<ExtArgs>>): Prisma.Prisma__StoryClient<runtime.Types.Result.GetResult<Prisma.$StoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Stories.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StoryCountArgs} args - Arguments to filter Stories to count.
   * @example
   * // Count the number of Stories
   * const count = await prisma.story.count({
   *   where: {
   *     // ... the filter for the Stories we want to count
   *   }
   * })
  **/
  count<T extends StoryCountArgs>(
    args?: Prisma.Subset<T, StoryCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], StoryCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Story.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends StoryAggregateArgs>(args: Prisma.Subset<T, StoryAggregateArgs>): Prisma.PrismaPromise<GetStoryAggregateType<T>>

  /**
   * Group by Story.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StoryGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends StoryGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: StoryGroupByArgs['orderBy'] }
      : { orderBy?: StoryGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, StoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Story model
 */
readonly fields: StoryFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Story.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__StoryClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  author<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  tags<T extends Prisma.Story$tagsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Story$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TagsOnStoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  elevationRequests<T extends Prisma.Story$elevationRequestsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Story$elevationRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ElevationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  lab<T extends Prisma.LabDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.LabDefaultArgs<ExtArgs>>): Prisma.Prisma__LabClient<runtime.Types.Result.GetResult<Prisma.$LabPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Story model
 */
export interface StoryFieldRefs {
  readonly id: Prisma.FieldRef<"Story", 'String'>
  readonly userId: Prisma.FieldRef<"Story", 'String'>
  readonly draft: Prisma.FieldRef<"Story", 'Boolean'>
  readonly title: Prisma.FieldRef<"Story", 'String'>
  readonly content: Prisma.FieldRef<"Story", 'String'>
  readonly longitude: Prisma.FieldRef<"Story", 'Float'>
  readonly latitude: Prisma.FieldRef<"Story", 'Float'>
  readonly year: Prisma.FieldRef<"Story", 'Int'>
  readonly visibleUniverse: Prisma.FieldRef<"Story", 'Boolean'>
  readonly featuredImageUrl: Prisma.FieldRef<"Story", 'String'>
  readonly license: Prisma.FieldRef<"Story", 'License'>
  readonly createdAt: Prisma.FieldRef<"Story", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Story", 'DateTime'>
  readonly labId: Prisma.FieldRef<"Story", 'String'>
}
    

// Custom InputTypes
/**
 * Story findUnique
 */
export type StoryFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
  /**
   * Filter, which Story to fetch.
   */
  where: Prisma.StoryWhereUniqueInput
}

/**
 * Story findUniqueOrThrow
 */
export type StoryFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
  /**
   * Filter, which Story to fetch.
   */
  where: Prisma.StoryWhereUniqueInput
}

/**
 * Story findFirst
 */
export type StoryFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
  /**
   * Filter, which Story to fetch.
   */
  where?: Prisma.StoryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Stories to fetch.
   */
  orderBy?: Prisma.StoryOrderByWithRelationInput | Prisma.StoryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Stories.
   */
  cursor?: Prisma.StoryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Stories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Stories.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Stories.
   */
  distinct?: Prisma.StoryScalarFieldEnum | Prisma.StoryScalarFieldEnum[]
}

/**
 * Story findFirstOrThrow
 */
export type StoryFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
  /**
   * Filter, which Story to fetch.
   */
  where?: Prisma.StoryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Stories to fetch.
   */
  orderBy?: Prisma.StoryOrderByWithRelationInput | Prisma.StoryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Stories.
   */
  cursor?: Prisma.StoryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Stories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Stories.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Stories.
   */
  distinct?: Prisma.StoryScalarFieldEnum | Prisma.StoryScalarFieldEnum[]
}

/**
 * Story findMany
 */
export type StoryFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
  /**
   * Filter, which Stories to fetch.
   */
  where?: Prisma.StoryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Stories to fetch.
   */
  orderBy?: Prisma.StoryOrderByWithRelationInput | Prisma.StoryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Stories.
   */
  cursor?: Prisma.StoryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Stories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Stories.
   */
  skip?: number
  distinct?: Prisma.StoryScalarFieldEnum | Prisma.StoryScalarFieldEnum[]
}

/**
 * Story create
 */
export type StoryCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
  /**
   * The data needed to create a Story.
   */
  data: Prisma.XOR<Prisma.StoryCreateInput, Prisma.StoryUncheckedCreateInput>
}

/**
 * Story createMany
 */
export type StoryCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Stories.
   */
  data: Prisma.StoryCreateManyInput | Prisma.StoryCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Story createManyAndReturn
 */
export type StoryCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * The data used to create many Stories.
   */
  data: Prisma.StoryCreateManyInput | Prisma.StoryCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Story update
 */
export type StoryUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
  /**
   * The data needed to update a Story.
   */
  data: Prisma.XOR<Prisma.StoryUpdateInput, Prisma.StoryUncheckedUpdateInput>
  /**
   * Choose, which Story to update.
   */
  where: Prisma.StoryWhereUniqueInput
}

/**
 * Story updateMany
 */
export type StoryUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Stories.
   */
  data: Prisma.XOR<Prisma.StoryUpdateManyMutationInput, Prisma.StoryUncheckedUpdateManyInput>
  /**
   * Filter which Stories to update
   */
  where?: Prisma.StoryWhereInput
  /**
   * Limit how many Stories to update.
   */
  limit?: number
}

/**
 * Story updateManyAndReturn
 */
export type StoryUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * The data used to update Stories.
   */
  data: Prisma.XOR<Prisma.StoryUpdateManyMutationInput, Prisma.StoryUncheckedUpdateManyInput>
  /**
   * Filter which Stories to update
   */
  where?: Prisma.StoryWhereInput
  /**
   * Limit how many Stories to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Story upsert
 */
export type StoryUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
  /**
   * The filter to search for the Story to update in case it exists.
   */
  where: Prisma.StoryWhereUniqueInput
  /**
   * In case the Story found by the `where` argument doesn't exist, create a new Story with this data.
   */
  create: Prisma.XOR<Prisma.StoryCreateInput, Prisma.StoryUncheckedCreateInput>
  /**
   * In case the Story was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.StoryUpdateInput, Prisma.StoryUncheckedUpdateInput>
}

/**
 * Story delete
 */
export type StoryDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
  /**
   * Filter which Story to delete.
   */
  where: Prisma.StoryWhereUniqueInput
}

/**
 * Story deleteMany
 */
export type StoryDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Stories to delete
   */
  where?: Prisma.StoryWhereInput
  /**
   * Limit how many Stories to delete.
   */
  limit?: number
}

/**
 * Story.tags
 */
export type Story$tagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TagsOnStories
   */
  select?: Prisma.TagsOnStoriesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TagsOnStories
   */
  omit?: Prisma.TagsOnStoriesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TagsOnStoriesInclude<ExtArgs> | null
  where?: Prisma.TagsOnStoriesWhereInput
  orderBy?: Prisma.TagsOnStoriesOrderByWithRelationInput | Prisma.TagsOnStoriesOrderByWithRelationInput[]
  cursor?: Prisma.TagsOnStoriesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TagsOnStoriesScalarFieldEnum | Prisma.TagsOnStoriesScalarFieldEnum[]
}

/**
 * Story.elevationRequests
 */
export type Story$elevationRequestsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ElevationRequest
   */
  select?: Prisma.ElevationRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ElevationRequest
   */
  omit?: Prisma.ElevationRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ElevationRequestInclude<ExtArgs> | null
  where?: Prisma.ElevationRequestWhereInput
  orderBy?: Prisma.ElevationRequestOrderByWithRelationInput | Prisma.ElevationRequestOrderByWithRelationInput[]
  cursor?: Prisma.ElevationRequestWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ElevationRequestScalarFieldEnum | Prisma.ElevationRequestScalarFieldEnum[]
}

/**
 * Story without action
 */
export type StoryDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Story
   */
  select?: Prisma.StorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Story
   */
  omit?: Prisma.StoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoryInclude<ExtArgs> | null
}
